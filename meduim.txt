we're going to start by creating a new nestjs application
check your nestjs version
....nest --version
.... nest new nestjs_auth


first we're going to install mongoose package

...npm install --save @nestjs/mongoose mongoose

then passport 
npm install --save @nestjs/passport passport passport-local
npm install --save-dev @types/passport-local
we use save-dev for the types (explain why)

npm install jsonwebtoken --save


then the bycrypt
npm i bcrypt
npm i -D @types/bcrypt
we use -D for the types (explain why)

first we need to add the mongoosemodule in app.module.ts 

image 1
-what to import
-explain why we use mongoosemodule 

$ npm i --save @nestjs/config
import ConfigModule.forRoot() to make .env run
-and how to use .env
_______________________________________________________________________

create the user schema
inside the /models/user.schema.ts
the importance of bcrypt and the hash password
image 2
_______________________________________________________________________

now create 3 files
nest g module  user
nest g service user --no-spec

_______________________________________________________________________
we're going to start by creating the user register
for that we need to start with
add the mongodmodule for feature in the user.module
3
_______________________________________________________________________
add the user.ts to the type forlder and put your user interface
add the register.dto.ts to the user forlder
_________________________________________________________________________
first we're going to create the register function inside the user service
we inject the usermodel inside the constructor
(explain what's inside the create function)
now we create the sanitizeuser function

_________________________________________________________________________

now we need to create the auth module controller and service
nest g module auth
nest g service auth --no-spec
nest g controller auth --no-spec

login.dto.ts inside the auth forlder
jwt.strategy.ts
_________________________________________________________________________
creat the login dto
_________________________________________________________________________
now add the function findbypayload
findbylogin
for that import bcryot

________________________________________________________________________
 add the  exports: [UserService]
 import it inthe auth.mopdule.ts
 to the user module so we can use it later on
_________________________________________________________________________
inside the auth service
add the signpayload method
so we need to import sign from jsonwebtoken

_________________________________________________________________

now in the auth.controller.ts
let add user service and the auth service to the constructor
and lets create the register 
_________________________________________________________________
we finished creating the user register functions we can test it out using postman
